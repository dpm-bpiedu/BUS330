/////////////////////////////////////
///// General
/////////////////////////////////////

@mixin color($hex) {
	color: $hex;
}

@mixin background($hex) {
	background-color: $hex;
}

@mixin border($hex) {
	border-color: $hex;
}



// generic colors

@mixin black($type) {
	@if $type == color {
		@include color($black-hex);
	} @else if $type == background {
		@include background($black-hex);
	} @else if $type == border {
		@include border($black-hex);
	}	
}

@mixin white($type) {
	@if $type == color {
		@include color($white-hex);
	} @else if $type == background {
		@include background($white-hex);
	} @else if $type == border {
		@include border($white-hex);
	}	
}

@mixin red($type) {
	@if $type == color {
		@include color($red-hex);
	} @else if $type == background {
		@include background($red-hex);
	} @else if $type == border {
		@include border($red-hex);
	}	
}

@mixin gray($type) {
	@if $type == color {
		@include color($gray-hex);
	} @else if $type == background {
		@include background($gray-hex);
	} @else if $type == border {
		@include border($gray-hex);
	}	
}

@mixin lightGray($type) {
	@if $type == color {
		@include color($lightGray-hex);
	} @else if $type == background {
		@include background($lightGray-hex);
	} @else if $type == border {
		@include border($lightGray-hex);
	}	
}

@mixin darkGray($type) {
	@if $type == color {
		@include color($darkGray-hex);
	} @else if $type == background {
		@include background($darkGray-hex);
	} @else if $type == border {
		@include border($darkGray-hex);
	}	
}

@mixin offWhite($type) {
	@if $type == color {
		@include color($offWhite-hex);
	} @else if $type == background {
		@include background($offWhite-hex);
	} @else if $type == border {
		@include border($offWhite-hex);
	}	
}

@mixin link($type) {
	@if $type == color {
		@include color($link-hex);
	} @else if $type == background {
		@include background($link-hex);
	} @else if $type == border {
		@include border($link-hex);
	}	
}

// pallet colors

@mixin color-1($type) {
	@if $type == color {
		@include color($color-1-hex);
	} @else if $type == background {
		@include background($color-1-hex);
	} @else if $type == border {
		@include border($color-1-hex);
	}	
}

@mixin color-2($type) {
	@if $type == color {
		@include color($color-2-hex);
	} @else if $type == background {
		@include background($color-2-hex);
	} @else if $type == border {
		@include border($color-2-hex);
	}	
}

@mixin color-3($type) {
	@if $type == color {
		@include color($color-3-hex);
	} @else if $type == background {
		@include background($color-3-hex);
	} @else if $type == border {
		@include border($color-3-hex);
	}	
}

@mixin color-4($type) {
	@if $type == color {
		@include color($color-4-hex);
	} @else if $type == background {
		@include background($color-4-hex);
	} @else if $type == border {
		@include border($color-4-hex);
	}	
}

@mixin color-5($type) {
	@if $type == color {
		@include color($color-5-hex);
	} @else if $type == background {
		@include background($color-5-hex);
	} @else if $type == border {
		@include border($color-5-hex);
	}	
}

@mixin color-6($type) {
	@if $type == color {
		@include color($color-6-hex);
	} @else if $type == background {
		@include background($color-6-hex);
	} @else if $type == border {
		@include border($color-6-hex);
	}	
}

@mixin color-7($type) {
	@if $type == color {
		@include color($color-7-hex);
	} @else if $type == background {
		@include background($color-7-hex);
	} @else if $type == border {
		@include border($color-7-hex);
	}	
}

@mixin color-8($type) {
	@if $type == color {
		@include color($color-8-hex);
	} @else if $type == background {
		@include background($color-8-hex);
	} @else if $type == border {
		@include border($color-8-hex);
	}	
}

// fonts

// font options
$cambria: Cambria, Times, "Times New Roman", serif;

// fonts
$body-text: $cambria;
$heading-text: $cambria; 

